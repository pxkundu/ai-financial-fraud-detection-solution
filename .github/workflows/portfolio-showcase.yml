name: ALML Portfolio Showcase CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:  # Allow manual triggering

env:
  PYTHONPATH: ${{ github.workspace }}

jobs:
  lint:
    name: Lint Python Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort
      - name: Run linters
        run: |
          flake8 . --max-line-length=120
          black . --check
          isort . --check-only

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov pytest-html
      - name: Run pytest with coverage
        run: |
          pytest --cov=. --cov-report=xml --html=test-report.html
      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: |
            test-report.html
            coverage.xml

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bandit safety
      - name: Run Bandit Security Scan
        run: |
          bandit -r . -f json -o bandit-results.json
      - name: Run Safety Check
        run: |
          safety check
      - name: Upload security results
        uses: actions/upload-artifact@v3
        with:
          name: security-results
          path: bandit-results.json

  build-docs:
    name: Build Documentation
    runs-on: ubuntu-latest
    needs: security
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install mkdocs mkdocs-material mkdocs-jupyter
      - name: Build MkDocs Site
        run: |
          mkdocs build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./site

  deploy-docs:
    name: Deploy Documentation to GitHub Pages
    runs-on: ubuntu-latest
    needs: build-docs
    environment: github_pages
    permissions:
      contents: write
      pages: write
      id-token: write
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v3
        with:
          enablement: true
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Verify Deployment
        run: |
          echo "Waiting for GitHub Pages deployment..."
          sleep 30
          if ! curl -s -f "https://${{ github.repository_owner }}.github.io/ai-financial-fraud-detection-solution/" > /dev/null; then
            echo "Error: GitHub Pages site is not accessible"
            exit 1
          fi
          echo "Documentation deployment verified successfully" 